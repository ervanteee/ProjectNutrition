@model ProjectNutrition.Models.Grade

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container mt-5">
    <h2 class="mb-4">Edit Grade</h2>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Grade</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
    @Html.HiddenFor(model => model.Grade1)

    <div class="form-group row">
        @Html.LabelFor(model => model.SugarContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SugarContent, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter sugar content" } })
            @Html.ValidationMessageFor(model => model.SugarContent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.FatContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FatContent, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter fat content" } })
            @Html.ValidationMessageFor(model => model.FatContent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.LabelRequirments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LabelRequirments, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter label requirements" } })
            @Html.ValidationMessageFor(model => model.LabelRequirments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter description" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Hide the Admin field, populated from session -->
    @Html.HiddenFor(model => model.Admin)

    <div class="form-group row">
        <div class="col-md-10 offset-md-2">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary ml-2" })
        </div>
    </div>
</div>
    }
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>